{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\UnknownTorrent\\\\DNS-Service-on-Polygon\\\\UI\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport { ethers } from 'ethers';\nimport contractABI from './utils/contractABI.json';\nimport { networks } from './utils/networks';\nimport polygonLogo from './assets/polygonlogo.png';\nimport ethLogo from './assets/ethlogo.png';\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/logesh_varman`;\nconst tld = '.bonk';\nconst CONTRACT_ADDRESS = \"0x798953b090289Ebde16F7f2988f4819adfd46F78\";\nconst App = () => {\n  _s();\n  const [currentAccount, setCurrentAccount] = React.useState(\"\");\n  const [domain, setDomain] = React.useState(\"\");\n  const [editing, setEditing] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [record, setRecord] = React.useState(\"\");\n  const [mints, setMints] = React.useState([]);\n  const [network, setNetwork] = React.useState(\"\");\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n    if (accounts !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n    const chainId = await ethereum.request({\n      method: 'eth_chainId'\n    });\n    setNetwork(networks[chainId]);\n    ethereum.on('chainChanged', handleChainChanged);\n    function handleChainChanged(_chainId) {\n      setNetwork(networks[_chainId]);\n    }\n  };\n  const updateDomain = async () => {\n    if (!record || !domain) {\n      return;\n    }\n    setLoading(true);\n    console.log(\"Updating domain\", domain, \"with record\", record);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n        let txn = await contract.setRecord(domain, record);\n        await txn.wait();\n        console.log(\"Record set! https://mumbai.polygonscan.com/tx/\", txn.hash);\n        setTimeout(() => {\n          fetchMints();\n        }, 2000);\n        setRecord(\"\");\n        setDomain(\"\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const mintDomain = async () => {\n    if (!domain) {\n      return;\n    }\n    if (domain.length < 3) {\n      alert(\"Domain too short\");\n      return;\n    }\n    const price = domain.length === 3 ? '0.05' : domain.length === 4 ? '0.03' : '0.01';\n    console.log(\"Minting domain\", domain, \"with price\", price);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n        let txn = await contract.register(domain, {\n          value: ethers.utils.parseEther(price)\n        });\n        const receipt = await txn.wait();\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\", txn.hash);\n          txn = await contract.setRecord(domain, record);\n          await txn.wait();\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\", txn.hash);\n          setTimeout(() => {\n            fetchMints();\n          }, 2000);\n          setDomain(\"\");\n          setRecord(\"\");\n        }\n      } else {\n        console.log(\"Transaction failed\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const renderMints = () => {\n    if (currentAccount && mints.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mint-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: \" Recently minted domains!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mint-list\",\n          children: mints.map((mint, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mint-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mint-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"link\",\n                  href: `https://testnets.opensea.io/assets/mumbai/${CONTRACT_ADDRESS}/${mint.id}`,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"underlined\",\n                    children: [' ', mint.name, tld, ' ']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 7\n                }, this), mint.owner.toLowerCase() === currentAccount.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-button\",\n                  onClick: () => editRecord(mint.name),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"edit-icon\",\n                    src: \"https://img.icons8.com/metro/26/000000/pencil.png\",\n                    alt: \"Edit button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 8\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 9\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", mint.record, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 5\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 6\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 4\n      }, this);\n    }\n  };\n  const editRecord = name => {\n    console.log(\"Editing record for\", name);\n    setDomain(name);\n    setEditing(true);\n  };\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/mjgUZoKl0r2jLtpdFf/giphy.gif\",\n      alt: \"metamask-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cta-button connect-wallet-button\",\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 3\n  }, this);\n  const fetchMints = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n        const names = await contract.getAllNames();\n        const mintRecords = await Promise.all(names.map(async name => {\n          const mintRecord = await contract.records(name);\n          const owner = await contract.domains(name);\n          return {\n            id: names.indexOf(name),\n            name: name,\n            record: mintRecord,\n            owner: owner\n          };\n        }));\n        console.log(\"Mints: \", mintRecords);\n        setMints(mintRecords);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const switchNetwork = async () => {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: '0x13881'\n          }]\n        });\n      } catch (error) {\n        if (error === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x13881',\n                chainName: 'Polygon Mumbai Testnet',\n                rpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\n                nativeCurrency: {\n                  name: 'Mumbai MATIC',\n                  symbol: 'MATIC',\n                  decimals: 18\n                },\n                blockExplorerUrls: ['https://mumbai.polygonscan.com/']\n              }]\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        console.log(error);\n      }\n    } else {\n      alert(\"Get MetaMask!\");\n    }\n  };\n  const renderInputForm = () => {\n    if (network !== \"Polygon Mumbai Testnet\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Please connect to the Polygon Mumbai Testnet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 5\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Domain\",\n          value: domain,\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tld\",\n          children: tld\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"whats ur ninja power\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 5\n      }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: updateDomain,\n          disabled: loading,\n          children: \"Set record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: () => {\n            setEditing(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 6\n        }, this), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cta-button mint-button\",\n        disabled: loading,\n        onClick: mintDomain,\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 4\n    }, this);\n  };\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  useEffect(() => {\n    if (network == \"Polygon Mumbai Testnet\") {\n      fetchMints();\n    }\n  }, [currentAccount, network]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"Bonk Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Network logo\",\n              className: \"logo\",\n              src: network.includes('Polygon') ? polygonLogo : ethLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 4\n            }, this), currentAccount ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Wallet : \", currentAccount.slice(0, 6), \"...\", currentAccount.slice(-4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 22\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Not Connected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 98\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 5\n      }, this), !currentAccount && renderNotConnectedContainer(), currentAccount && renderInputForm(), mints && renderMints(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"nthVtgnVHKiDXAGkEqaDGAhbPcE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","twitterLogo","ethers","contractABI","networks","polygonLogo","ethLogo","jsxDEV","_jsxDEV","TWITTER_HANDLE","TWITTER_LINK","tld","CONTRACT_ADDRESS","App","_s","currentAccount","setCurrentAccount","useState","domain","setDomain","editing","setEditing","loading","setLoading","record","setRecord","mints","setMints","network","setNetwork","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","account","chainId","on","handleChainChanged","_chainId","updateDomain","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","txn","wait","hash","setTimeout","fetchMints","error","mintDomain","length","alert","price","register","value","utils","parseEther","receipt","status","renderMints","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","mint","index","href","id","target","rel","name","owner","toLowerCase","onClick","editRecord","src","alt","connectWallet","renderNotConnectedContainer","names","getAllNames","mintRecords","Promise","all","mintRecord","records","domains","indexOf","switchNetwork","params","chainName","rpcUrls","nativeCurrency","symbol","decimals","blockExplorerUrls","renderInputForm","type","placeholder","onChange","e","disabled","includes","slice","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/UnknownTorrent/DNS-Service-on-Polygon/UI/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './styles/App.css';\r\nimport twitterLogo from './assets/twitter-logo.svg';\r\nimport { ethers } from 'ethers';\r\nimport contractABI from './utils/contractABI.json';\r\nimport {networks} from './utils/networks';\r\nimport polygonLogo from './assets/polygonlogo.png';\r\nimport ethLogo \tfrom './assets/ethlogo.png';\r\n// Constants\r\nconst TWITTER_HANDLE = '_buildspace';\r\nconst TWITTER_LINK = `https://twitter.com/logesh_varman`;\r\n\r\nconst tld = '.bonk';\r\nconst CONTRACT_ADDRESS = \"0x798953b090289Ebde16F7f2988f4819adfd46F78\";\r\n\r\nconst App = () => {\r\n\r\n\tconst [currentAccount, setCurrentAccount] = React.useState(\"\");\r\n\tconst [domain,setDomain] = React.useState(\"\");\r\n\tconst [editing,setEditing] = React.useState(false);\r\n\tconst [loading,setLoading] = React.useState(false);\r\n\tconst [record,setRecord] = React.useState(\"\");\r\n\tconst [mints,setMints] = React.useState([]);\r\n\tconst [network,setNetwork] = React.useState(\"\");\r\n\r\n\tconst checkIfWalletIsConnected  =  async  () => {\r\n\t\tconst {ethereum} = window;\r\n\r\n\t\tif(!ethereum){\r\n\t\t\tconsole.log(\"Make sure you have MetaMask!\");\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tconsole.log(\"We have the ethereum object\",ethereum);\r\n\t\t}\r\n\r\n\t\tconst accounts = await ethereum.request({ method: 'eth_accounts'});\r\n\r\n\t\tif(accounts!==0){\r\n\t\t\tconst account = accounts[0];\r\n\t\t\tconsole.log(\"Found an authorized account:\", account);\r\n\t\t\tsetCurrentAccount(account);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"No authorized account found\");\r\n\t\t}\r\n\r\n\t\tconst chainId = await ethereum.request({method: 'eth_chainId'});\r\n\t\tsetNetwork(networks[chainId]);\r\n\r\n\t\tethereum.on('chainChanged',handleChainChanged);\r\n\r\n\t\tfunction handleChainChanged(_chainId){\r\n\t\t\tsetNetwork(networks[_chainId]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateDomain = async() =>{\r\n\t\tif(!record || !domain) {return}\r\n\t\tsetLoading(true);\r\n\t\tconsole.log(\"Updating domain\",domain,\"with record\",record);\r\n\t\ttry{\r\n\t\t\tconst {ethereum} = window;\r\n\r\n\t\t\tif(ethereum) {\r\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\r\n\t\t\t\tconst signer = provider.getSigner();\r\n\t\t\t\tconst contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\r\n\r\n\t\t\t\tlet txn = await contract.setRecord(domain,record);\r\n\t\t\t\tawait txn.wait();\r\n\r\n\t\t\t\tconsole.log(\"Record set! https://mumbai.polygonscan.com/tx/\",txn.hash);\r\n\t\t\t\t\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tfetchMints();\r\n\t\t\t\t}, 2000);\r\n\t\t\t\tsetRecord(\"\");\r\n\t\t\t\tsetDomain(\"\");\r\n\t\t\t}\r\n\t\t}catch (error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\tconst mintDomain = async() => {\r\n\t\tif(!domain) {return}\r\n\r\n\t\tif(domain.length<3){\r\n\t\t\talert(\"Domain too short\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst price = domain.length === 3 ? '0.05' : domain.length === 4 ? '0.03' : '0.01';\r\n\t\tconsole.log(\"Minting domain\",domain,\"with price\",price);\r\n\r\n\t\ttry{\r\n\t\t\tconst {ethereum} = window;\r\n\r\n\t\t\tif(ethereum){\r\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\r\n\t\t\t\tconst signer = provider.getSigner();\r\n\t\t\t\tconst contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\r\n\r\n\t\t\t\tlet txn = await contract.register(domain,{value: ethers.utils.parseEther(price)});\r\n\r\n\t\t\t\tconst receipt = await txn.wait();\r\n\r\n\t\t\t\tif(receipt.status === 1){\r\n\t\t\t\t\tconsole.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\",txn.hash);\r\n\r\n\t\t\t\t\ttxn = await contract.setRecord(domain,record);\r\n\t\t\t\t\tawait txn.wait();\r\n\r\n\t\t\t\t\tconsole.log(\"Record set! https://mumbai.polygonscan.com/tx/\",txn.hash);\r\n\r\n\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tfetchMints();\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t\t\tsetDomain(\"\");\r\n\t\t\t\t\tsetRecord(\"\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Transaction failed\");\r\n\t\t\t}\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst renderMints = () => {\r\n\t\tif (currentAccount && mints.length > 0) {\r\n\t\t  return (\r\n\t\t\t<div className=\"mint-container\">\r\n\t\t\t  <p className=\"subtitle\"> Recently minted domains!</p>\r\n\t\t\t  <div className=\"mint-list\">\r\n\t\t\t\t{ mints.map((mint, index) => {\r\n\t\t\t\t  return (\r\n\t\t\t\t\t<div className=\"mint-item\" key={index}>\r\n\t\t\t\t\t  <div className='mint-row'>\r\n\t\t\t\t\t\t<a className=\"link\" href={`https://testnets.opensea.io/assets/mumbai/${CONTRACT_ADDRESS}/${mint.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t  <p className=\"underlined\">{' '}{mint.name}{tld}{' '}</p>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t{/* If mint.owner is currentAccount, add an \"edit\" button*/}\r\n\t\t\t\t\t\t{ mint.owner.toLowerCase() === currentAccount.toLowerCase() ?\r\n\t\t\t\t\t\t  <button className=\"edit-button\" onClick={() => editRecord(mint.name)}>\r\n\t\t\t\t\t\t\t<img className=\"edit-icon\" src=\"https://img.icons8.com/metro/26/000000/pencil.png\" alt=\"Edit button\" />\r\n\t\t\t\t\t\t  </button>\r\n\t\t\t\t\t\t  :\r\n\t\t\t\t\t\t  null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t<p> {mint.record} </p>\r\n\t\t\t  </div>)\r\n\t\t\t  })}\r\n\t\t\t</div>\r\n\t\t  </div>);\r\n\t\t}\r\n\t  };\r\n\r\n\tconst editRecord = (name) => {\r\n\t\tconsole.log(\"Editing record for\",name);\r\n\t\tsetDomain(name);\r\n\t\tsetEditing(true);\r\n\t}\r\n\r\n\tconst connectWallet = async () => {\r\n\t\ttry {\r\n\t\t\tconst {ethereum} = window;\r\n\r\n\t\t\tif(!ethereum){\r\n\t\t\t\talert(\"Get MetaMask!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst accounts = await ethereum.request({ method: 'eth_requestAccounts'});\r\n\t\t\tconsole.log(\"Connected\", accounts[0]);\r\n\t\t\tsetCurrentAccount(accounts[0]);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst renderNotConnectedContainer = () => (\r\n\t\t<div className=\"connect-wallet-container\">\r\n\t\t\t<img src=\"https://media.giphy.com/media/mjgUZoKl0r2jLtpdFf/giphy.gif\" alt=\"metamask-logo\" />\r\n\t\t\t<button className=\"cta-button connect-wallet-button\" onClick={connectWallet}>\r\n\t\t\t\tConnect Wallet\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n\r\n\tconst fetchMints = async() => {\r\n\t\ttry{\r\n\t\t\tconst {ethereum} = window;\r\n\r\n\t\t\tif(ethereum){\r\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\r\n\t\t\t\tconst signer = provider.getSigner();\r\n\t\t\t\tconst contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\r\n\r\n\t\t\t\tconst names = await contract.getAllNames();\r\n\t\t\t\t\r\n\t\t\t\tconst mintRecords = await Promise.all(names.map(async (name) => {\r\n\t\t\t\t\tconst mintRecord = await contract.records(name);\r\n\t\t\t\t\tconst owner = await contract.domains(name);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid : names.indexOf(name),\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\trecord: mintRecord,\r\n\t\t\t\t\t\towner: owner\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tconsole.log(\"Mints: \", mintRecords);\r\n\t\t\t\tsetMints(mintRecords);\r\n\t\t\t}\r\n\t\t} catch (error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst switchNetwork = async()=>{\r\n\t\tif(window.ethereum) {\r\n\t\t\ttry{\r\n\t\t\t\tawait window.ethereum.request({\r\n\t\t\t\t\tmethod: 'wallet_switchEthereumChain',\r\n\t\t\t\t\tparams: [{ chainId: '0x13881' }],\r\n\t\t\t\t})\r\n\t\t\t} catch(error){\r\n\t\t\t\tif(error === 4902) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tawait window.ethereum.request ({\r\n\t\t\t\t\t\t\tmethod: 'wallet_addEthereumChain',\r\n\t\t\t\t\t\t\tparams: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tchainId: '0x13881',\r\n\t\t\t\t\t\t\t\t\tchainName: 'Polygon Mumbai Testnet',\r\n\t\t\t\t\t\t\t\t\trpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\r\n\t\t\t\t\t\t\t\t\tnativeCurrency: {\r\n\t\t\t\t\t\t\t\t\t\tname: 'Mumbai MATIC',\r\n\t\t\t\t\t\t\t\t\t\tsymbol: 'MATIC',\r\n\t\t\t\t\t\t\t\t\t\tdecimals: 18\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tblockExplorerUrls: ['https://mumbai.polygonscan.com/']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}catch(error){\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}console.log(error);\r\n\t\t\t}\r\n\t\t}else {\r\n\t\t\talert(\"Get MetaMask!\");\r\n\t\t}\r\n\t}\r\n\r\n\tconst renderInputForm = () => {\r\n\r\n\t\tif(network !== \"Polygon Mumbai Testnet\"){\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"connect-wallet-container\">\r\n\t\t\t\t<p> Please connect to the Polygon Mumbai Testnet</p>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div className= \"form-container\">\r\n\t\t\t\t<div className=\"first-row\">\r\n\t\t\t\t\t<input type=\"text\" placeholder=\"Enter Domain\" value={domain} onChange={(e) => setDomain(e.target.value)} />\r\n\t\t\t\t\t<p className='tld'>{tld}</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={record}\r\n\t\t\t\t\tplaceholder=\"whats ur ninja power\"\r\n\t\t\t\t\tonChange={(e) => setRecord(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t{editing  ? (\r\n\t\t\t\t\t<div className=\"button-container\">\r\n\t\t\t\t\t<button className='cta-button mint-button' onClick={updateDomain} disabled={loading}>\r\n\t\t\t\t\tSet record\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className='cta-button mint-button' onClick={()=>{setEditing(false)}}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>;\r\n\t\t\t\t\t</div>\r\n\t\t\t\t): (\r\n\t\t\t\t\t<button className='cta-button mint-button' disabled={loading} onClick={mintDomain}>\r\n              Mint\r\n            </button>\r\n\t\t\t\t)}\r\n{/* \r\n\t\t\t\t<div className='button-container'>\r\n\t\t\t\t\t<button className='cta-button mint-button' onClick={mintDomain} >\r\n\t\t\t\t\t\tMint\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className='cta-button mint-button' onClick={null} disabled={null}>\r\n\t\t\t\t\t\tSet data\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tcheckIfWalletIsConnected();\r\n\t\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (network == \"Polygon Mumbai Testnet\") {\r\n\t\t\tfetchMints();\r\n\t\t}\r\n\t}, [currentAccount,network]);\r\n\r\n  return (\r\n\t\t<div className=\"App\">\r\n\t\t\t<div className=\"container\">\r\n\r\n\t\t\t\t<div className=\"header-container\">\r\n\t\t\t\t\t<header>\r\n            <div className=\"left\">\r\n              <p className=\"title\">Bonk Name Service</p>\r\n              <p className=\"subtitle\">Your immortal API on the blockchain!</p>\r\n            </div>\r\n\t\t\t<div className='right'>\r\n\t\t\t<img alt=\"Network logo\" className=\"logo\" src={network.includes('Polygon') ? polygonLogo : ethLogo} />\r\n\t\t\t{currentAccount ? <p> Wallet : {currentAccount.slice(0,6)}...{currentAccount.slice(-4)}</p> : <p> Not Connected</p>}\r\n\t\t\t</div>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{!currentAccount && renderNotConnectedContainer()}\r\n\r\n\t\t\t\t{currentAccount && renderInputForm()}\r\n\r\n\t\t\t\t{mints && renderMints()}\r\n\r\n        <div className=\"footer-container\">\r\n\t\t\t\t\t<img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tclassName=\"footer-text\"\r\n\t\t\t\t\t\thref={TWITTER_LINK}\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t{/* {`built with @${TWITTER_HANDLE}`} */}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}